### users.http - REST Client API Documentation for Users Module
### This file allows you to test the Users API endpoints directly from VS Code
### Requirements: Install "REST Client" extension in VS Code (by Huachao Mao)

### ========================= VARIABLES & CONFIGURATION =========================
### Set your local server URL here
@baseUrl = http://localhost:3000
@contentType = application/json

### ========================= API ENDPOINTS =========================

### ========================= CREATE ADMIN USER =========================
### POST /users/create-admin
### Description: Create a new admin user with full privileges
### This endpoint is used to initialize the first HR administrator account
###
### Request Body:
### - email: Valid email address (must be unique)
### - password: At least 8 characters (will be hashed automatically)
### - firstName: User's first name
### - lastName: User's last name
### - position: Job position in the company
### - country: Either "France" or "Tunisia"
###
### Response: 201 Created
### Returns user object (without password) and success message

POST {{baseUrl}}/users/create-admin
Content-Type: {{contentType}}

{
  "email": "admin@company.com",
  "password": "SecurePassword123!",
  "firstName": "John",
  "lastName": "Doe",
  "position": "HR Manager",
  "country": "France"
}

### Example with different country
POST {{baseUrl}}/users/create-admin
Content-Type: {{contentType}}

{
  "email": "hr.tunisia@company.com",
  "password": "TunisHR2024!",
  "firstName": "Fatima",
  "lastName": "Ben Ali",
  "position": "HR Director",
  "country": "Tunisia"
}

### Error case: Duplicate email (should return 409 Conflict)
POST {{baseUrl}}/users/create-admin
Content-Type: {{contentType}}

{
  "email": "admin@company.com",
  "password": "AnotherPassword123!",
  "firstName": "Jane",
  "lastName": "Smith",
  "position": "HR Assistant",
  "country": "France"
}

### Error case: Invalid email format (should return 400 Bad Request)
POST {{baseUrl}}/users/create-admin
Content-Type: {{contentType}}

{
  "email": "invalid-email",
  "password": "SecurePassword123!",
  "firstName": "Test",
  "lastName": "User",
  "position": "HR Manager",
  "country": "France"
}

### Error case: Password too short (should return 400 Bad Request)
POST {{baseUrl}}/users/create-admin
Content-Type: {{contentType}}

{
  "email": "test@company.com",
  "password": "123",
  "firstName": "Test",
  "lastName": "User",
  "position": "HR Manager",
  "country": "France"
}

### ========================= GET ALL USERS =========================
### GET /users
### Description: Retrieve all users from the database
### This endpoint is typically used by administrators to view all user accounts
###
### No request body required
###
### Response: 200 OK
### Returns array of user objects with count

GET {{baseUrl}}/users

### ========================= QUICK TESTING SEQUENCE =========================
### 1. Start your NestJS server: npm run start:dev
### 2. Execute the first "Create Admin" request above
### 3. Execute "Get All Users" to verify the creation
### 4. Try the error cases to understand validation

### ========================= HELPFUL TIPS =========================
### 1. In VS Code, click "Send Request" above each POST/GET request
### 2. Use Ctrl+Click (Cmd+Click on Mac) on request URLs to quickly execute
### 3. Check the Response panel in VS Code to see results
### 4. 201 = Success, 400 = Validation Error, 409 = Duplicate User, 500 = Server Error
###
### Security Notes:
### - Passwords are automatically hashed with bcrypt (10 salt rounds)
### - Passwords are never returned in API responses
### - Admin users are marked with isAdmin: true
### - All users are active by default (isActive: true)

### ========================= FUTURE ENDPOINTS (TODO) =========================
### When you're ready to expand the API, consider adding:
###
### # GET /users/:id - Get specific user
### GET {{baseUrl}}/users/USER_ID_HERE
###
### # PUT /users/:id - Update user information
### PUT {{baseUrl}}/users/USER_ID_HERE
### Content-Type: {{contentType}}
###
### {
###   "firstName": "Updated Name",
###   "position": "New Position"
### }
###
### # DELETE /users/:id - Deactivate user (soft delete)
### DELETE {{baseUrl}}/users/USER_ID_HERE
###
### # POST /auth/login - User authentication
### POST {{baseUrl}}/auth/login
### Content-Type: {{contentType}}
###
### {
###   "email": "admin@company.com",
###   "password": "SecurePassword123!"
### }